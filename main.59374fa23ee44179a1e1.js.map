{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/shortid/index.js","webpack:///./node_modules/shortid/lib/alphabet.js","webpack:///./node_modules/shortid/lib/index.js","webpack:///./node_modules/shortid/lib/random/random-from-seed.js","webpack:///./node_modules/shortid/lib/build.js","webpack:///./node_modules/shortid/lib/generate.js","webpack:///./node_modules/shortid/lib/random/random-byte-browser.js","webpack:///./node_modules/nanoid/format.browser.js","webpack:///./node_modules/shortid/lib/is-valid.js","webpack:///./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack:///./src/helpers/index.ts","webpack:///./typings/app.ts","webpack:///./src/List/index.ts","webpack:///./src/model/todo/index.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","nextValue","Math","floor","push","splice","shuffle","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","id","RegExp","replace","test","TodoStatus","getAncestorWithType","element","nodeName","parentElement","statusToIconMap","COMPLETED","ENTERED","INPROCESS","listElementRenderer","status","toLowerCase","title","description","listElementEditRenderer","expiryDate","listElementNode","renderer","template","document","createElement","innerHTML","content","createEmptyTodo","mockedTodos","addEventListener","todos","todoUpdates","handleEventListeners","containerElement","event","target","updatedTodoId","getAttribute","handleUpdates","newTodo","preventDefault","addItem","findIndex","replaceModificationState","todoListElement","todoId","getListElement","remove","editItem","renderList","map","querySelector","prepend","unshift","elementId","update","editedItem","find","todo","listElement","replaceChild","childNodes","this"],"mappings":"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","file":"main.59374fa23ee44179a1e1.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","export const getAncestorWithType = (element: Element, nodeName: string): Element | undefined => {\r\n    if (element.nodeName === nodeName) {\r\n        return element;\r\n    }\r\n\r\n    if (element.parentElement) {\r\n        if (element.parentElement.nodeName === nodeName) {\r\n            return element.parentElement;\r\n        }\r\n\r\n        return getAncestorWithType(element.parentElement, nodeName)\r\n    }\r\n}\r\n","export enum TodoStatus {\r\n    ENTERED = 'ENTERED',\r\n    INPROCESS = 'INPROCESS',\r\n    COMPLETED = 'COMPLETED',\r\n}\r\n\r\nexport interface Todo {\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    status: TodoStatus,\r\n    expiryDate: string,\r\n}","import { Todo, TodoStatus } from \"../../typings/app\";\r\n\r\nconst statusToIconMap: Record<TodoStatus, string> = {\r\n  [TodoStatus.COMPLETED]: 'fa-check-circle success-color',\r\n  [TodoStatus.ENTERED]: 'fa-play accent-color',\r\n  [TodoStatus.INPROCESS]: 'fa-spinner active-color',\r\n}\r\n\r\nexport const listElementRenderer = (item: Todo) => `\r\n  <li class=\"ph-2\" data-todo-id=\"${item.id}\"><div>\r\n      <i class=\"mr-5 fas ${statusToIconMap[item.status]}\" title=\"${(item?.status ?? '').toLowerCase()}\"></i>\r\n      <span class=\"bold break-line\">${item.title}</span> -\r\n      <span class=\"italic break-line\">${item.description}</span>\r\n      <button name=\"remove-icon\" class=\"ml-5 icon-button\" title=\"delete item\">\r\n        <i class=\"fas fa-trash-alt danger-color\"></i>\r\n      </button>\r\n      <button name=\"edit-icon\" class=\"icon-button\" title=\"edit item\">\r\n        <i class=\"fas fa-pen-alt\"></i>\r\n      </button>\r\n    </div>\r\n  </li>\r\n`\r\n\r\nexport const listElementEditRenderer = (item: Todo) => `\r\n    <form name=\"edit-todo\" data-todo-edit-id=\"${item.id}\" class=\"d-flex justify-content\">\r\n      <input value=\"${item.title}\" class=\"input\" name=\"title\" required type=\"text\" maxlength=\"100\" placeholder=\"name your activtiy\">\r\n      <textarea name=\"description\" class=\"input textarea-horizontal\" required type=\"text\" maxlength=\"500\" placeholder=\"describe it...\">${item.description}</textarea>\r\n      <input value=\"${item.expiryDate}\" class=\"input\" name=\"expiryDate\" required type=\"date\">\r\n      <select class=\"input\" name=\"status\">\r\n        <option value=\"ENTERED\" ${item.status === TodoStatus.ENTERED ? 'selected': ''}>entered</option>\r\n        <option value=\"INPROCESS\" ${item.status === TodoStatus.INPROCESS ? 'selected': ''}>in process</option>\r\n        <option value=\"COMPLETED\" ${item.status === TodoStatus.COMPLETED ? 'selected': ''}>completed</option>\r\n      </select>\r\n      <div class=\"d-flex dir-col justify-content\">\r\n        <button name=\"cancel-modification\" class=\"ml-5 rounded danger-color cursor-pointer\" type=\"submit\">Cancel</button>\r\n        <button class=\"ml-5 rounded success-color cursor-pointer\" type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n`\r\n\r\nexport const listElementNode = (item: Todo, renderer: (item: Todo) => string) => {\r\n  const template = document.createElement('template');\r\n  template.innerHTML = renderer(item);\r\n  return template.content;\r\n}","import { Todo, TodoStatus } from \"../../../typings/app\";\r\nimport shortid from 'shortid';\r\n\r\nexport const createEmptyTodo = (): Todo => ({\r\n    id: shortid.generate(),\r\n    status: TodoStatus.ENTERED,\r\n    title: null,\r\n    description: null,\r\n    expiryDate: null,\r\n});\r\n\r\nexport const mockedTodos: Todo[] = [{\r\n    id: shortid.generate(),\r\n    description: 'testing desc...',\r\n    title: 'ab',\r\n    status: TodoStatus.COMPLETED,\r\n    expiryDate: '2018-07-22',\r\n},\r\n{\r\n    id: shortid.generate(),\r\n    description: 'testing desc... 2',\r\n    title: 'ab',\r\n    status: TodoStatus.ENTERED,\r\n    expiryDate: '2018-07-21',\r\n}, {\r\n    id: shortid.generate(),\r\n    description: 'testing desc... 4',\r\n    title: 'ab',\r\n    status: TodoStatus.INPROCESS,\r\n    expiryDate: '2018-07-23',\r\n}]","import { Todo } from '../typings/app';\nimport { getAncestorWithType } from './helpers/index';\nimport { listElementRenderer, listElementEditRenderer, listElementNode } from './List/index';\nimport './styles/style.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { createEmptyTodo, mockedTodos } from './model/todo/index';\n// template polyfil\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    new TodoApp(mockedTodos)\n});\n\nclass TodoApp {\n\n    todoListElement: Element;\n\n    containerElement: Element;\n\n    newTodo: Todo;\n\n    todos: Todo[];\n\n    todoUpdates: Record<string, Partial<Todo>> = {}\n\n    constructor(todos: Todo[]) {\n        // DOM nodes\n        this.containerElement = window.document.querySelector('#todo-container');\n        this.todoListElement = this.containerElement.querySelector('#todo-list');\n        \n        // data model\n        this.newTodo = createEmptyTodo();\n        this.todos = todos;\n\n        this.handleEventListeners();\n        this.renderList();\n    }\n\n    handleEventListeners = () => {\n        this.containerElement.addEventListener('change', (event: Event) => {\n            const { name, value, parentElement } = (event.target as HTMLInputElement);\n            const updatedTodoId = parentElement?.getAttribute('data-todo-edit-id');\n\n            if (updatedTodoId) {\n                return this.handleUpdates(updatedTodoId, { [name]: value })\n            }\n\n            (this.newTodo as any)[name] = value\n        })\n\n        this.containerElement.addEventListener('submit', (event: Event) => {\n            event.preventDefault();\n            const { name: formName } = (event.target as HTMLFormElement);\n\n            switch (formName) {\n                case 'create-todo':\n                    this.addItem();\n                    this.newTodo = createEmptyTodo();\n                    break;\n                case 'edit-todo':\n                    const updatedTodoId = (event.target as HTMLFormElement)?.getAttribute('data-todo-edit-id');\n                    const index = this.todos.findIndex(item => item.id === updatedTodoId);\n\n                    if (this.todoUpdates[updatedTodoId]) {\n                        this.todos[index] = { ...this.todos[index], ...this.todoUpdates[updatedTodoId] };\n                        this.todoUpdates[updatedTodoId] = null;\n                    }\n\n                    this.replaceModificationState(updatedTodoId);\n                    break;\n                default:\n                    break;\n            }\n\n            (event.target as HTMLFormElement).reset();\n        })\n\n        this.todoListElement.addEventListener('click', (event: Event) => {\n            const { name } = <HTMLInputElement>((event.target as HTMLInputElement).nodeName === 'BUTTON' ? event.target : (event.target as HTMLInputElement).parentElement)\n            \n            const todoId = getAncestorWithType(event.target as Element, 'LI')?.getAttribute('data-todo-id');\n\n            if (name && todoId) {\n                switch (name) {\n                    case 'remove-icon':\n                        this.getListElement(todoId).remove();\n                        this.todos = this.todos.filter(item => item.id !== todoId);\n                        break;\n                    case 'edit-icon':\n                        this.editItem(todoId)\n                        break;\n                    case 'cancel-modification':\n                        this.replaceModificationState(todoId);\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        })\n    }\n\n    renderList = () => {\n        this.todoListElement.innerHTML = this.todos.map(listElementRenderer).join('')\n    }\n\n    getListElement = (todoId: string) => this.todoListElement.querySelector(`[data-todo-id=\"${todoId}\"]`)\n\n    addItem = () => {\n        this.todoListElement.prepend(listElementNode(this.newTodo, listElementRenderer));\n        this.todos.unshift(this.newTodo);\n    }\n\n    handleUpdates = (elementId: string, update: Record<string, string>) => {\n        if (!this.todoUpdates[elementId]) {\n            this.todoUpdates[elementId] = {\n                ...update\n            }\n        } else {\n            this.todoUpdates[elementId] = {\n                ...this.todoUpdates[elementId],\n                ...update,\n            }\n        }\n    }\n\n    editItem = (todoId: string) => {\n        const editedItem = this.todos.find(todo => todo.id === todoId);\n        const listElement = this.getListElement(todoId);\n\n        listElement.replaceChild(listElementNode(editedItem, listElementEditRenderer), listElement.childNodes[0]);\n    }\n\n    replaceModificationState = (todoId: string) => {\n        const todo = this.todos.find(todo => todo.id === todoId);\n        const listElement = this.getListElement(todoId);\n\n        this.todoListElement.replaceChild(listElementNode(todo, listElementRenderer), listElement);\n    }\n}\n\n"],"sourceRoot":""}